{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","isActive","active","isUnread","unreadDialog","react_router_dom_dist","to","name","Message","message","unreadMessage","isMy","myMessage","text","NewMessageForm","onSubmit","formik","handleSubmit","FormsControls","placeholder","type","Dialogs","maxLength50","maxLengthCreator","useFormik","initialValues","validate","values","errors","required","formData","sendMessage","resetForm","dialogs","dialogsItems","map","i","Dialogs_DialogItem_DialogItem","key","messages","Dialogs_Message_Message","Dialogs_NewMessageForm","dist","compose","connect","dialogsPage","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React","module","exports"],"mappings":"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","file":"static/js/2.2cb51dd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if(!this.props.isAuth) return <Navigate to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = props => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + (props.state.isActive ? ' ' + s.active : '') + (props.state.isUnread ? ' ' + s.unreadDialog : '')}>\r\n      <NavLink to={path}>{props.state.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={s.message +\r\n      (props.state.isUnread ? ' ' + s.unreadMessage : '') +\r\n      (props.state.isMy ? ' ' + s.myMessage : '')}\r\n    >{props.state.text}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { useFormik } from 'formik'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\n\r\nconst NewMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.formik.handleSubmit}>\r\n      <div>\r\n        <Textarea \r\n          name='message' \r\n          id='message' \r\n          formik={props.formik} \r\n          placeholder='Enter your message' />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Dialogs = props => {\r\n  const maxLength50 = maxLengthCreator(50)\r\n  const validate = (values) => {\r\n    const errors = required(values.message) || maxLength50(values.message)\r\n    if(errors)\r\n      return { message: errors }\r\n    return undefined\r\n  }\r\n  \r\n  let sendMessage = (formData) => {\r\n    props.sendMessage(formData.message)\r\n    formik.resetForm()\r\n  }\r\n\r\n  const formik = useFormik ({\r\n    initialValues: {\r\n      message: ''\r\n    },\r\n    validate,\r\n    onSubmit: sendMessage\r\n  })\r\n\r\n  if (!props.isAuth) return <Navigate to='/login' />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {props.state.dialogs.map((dialog, i) =>\r\n          <DialogItem key={\"dialog_\" + i} state={dialog} />\r\n        )}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {props.state.messages.map((message, i) =>\r\n          <Message key={\"message_\" + i} state={message} />\r\n        )}\r\n        <NewMessageForm formik={formik} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (message) => {dispatch(sendMessageCreator(message))}\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3nzBk\",\"dialogsItems\":\"Dialogs_dialogsItems__3LvfS\",\"dialog\":\"Dialogs_dialog__cuwV6\",\"active\":\"Dialogs_active__vgeLp\",\"unreadDialog\":\"Dialogs_unreadDialog__23uUa\",\"messages\":\"Dialogs_messages__1yW8p\",\"message\":\"Dialogs_message__1K7Dd\",\"unreadMessage\":\"Dialogs_unreadMessage__c6mY3\",\"myMessage\":\"Dialogs_myMessage__2rOfx\"};"],"sourceRoot":""}